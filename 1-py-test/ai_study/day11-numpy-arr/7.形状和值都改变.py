''' 1. # 矩阵相乘 @ '''
''' 条件1：第一个列必须与第二个行，相等，返回（第一个行, 第二个的列）'''
import numpy as np

# shape1=(行, 列)    @ shape2=(行, 列) = shape(1行, 2列)
arr1 = np.array([[1, 2, 3], [4, 5, 6]])
print(arr1.shape)   # (2, 3)

arr2 = np.array([[1, 2, 3, 4], [4, 5, 6, 8], [7, 6, 8, 9]])  # （3, 4)
print(arr2.shape)   # (3, 4)

print(arr1 @ arr2)
# [[ 30  30  39  47] [ 66  69  90 110]]
# [[1*1 + 2*4 + 3*7 = 30,  1*2 + 2*5 + 3*6 = 30, ..]
# [4*1 + 5*4 + 6*7 = 66,  ....]]

''' 条件2：多维矩阵相乘：必须满足（1列=2行），shape=(剩余的必须满足广播, 1行，2列)'''
# arr3 = np.arange(1, 9).reshape(1, 2, 3, 4)
# print(arr3)
# arr4 = np.arange(1, 13).reshape(3, 1, 4, 1)
# print(arr4)

# print(arr3 @ arr4)

# 1*10 + 2*12 + 3*14 + 4*16 = 10+24+42+64 = 140,  1*11 + 2*13 + 3*15 + 4*17 = 11+26+45+68 = 150
#
# 5*10 + 6*12 + 7*14 + 8*16 = 50+72+98+128 = 348,  ...

# 9*10 + 10*12 + 11*14 + 12*16 = 90+120+154+192 = 556



arr6 = np.random.randint(1,5,(3,4,5,2,3,5,4,6))

arr7 = np.random.randint(1,5,(5,6,6))

# 2,3,5,4,6
print(arr6 @ arr7)

