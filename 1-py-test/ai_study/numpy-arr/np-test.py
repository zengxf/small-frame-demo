import numpy as np

arr4 = np.arange(480).reshape(4, 6, 5, 4)
print(arr4)
print('*' * 50)

# 1. 索引数组的个数不能超过 4，索引数组1 和 索引数组2 shape 一样
print(arr4[[0, 1, 2, 3], [5, 3, 2, 4], [4, 2, 3, 1], [3, 2, 1, 0]])
"""
四个索引组合成的坐标如下：
[0, 5, 4, 3] => 119
[1, 3, 2, 2] => 190
[2, 2, 3, 1] => 293
[3, 4, 1, 0] => 444
"""
# [119 190 293 444]


# 2. 广播：索引数组1 和 索引数组2 在同轴上元素个数相同 或 1个整数【1个】
print(arr4[[0, 1, 2, 3], [5, 3, 2, 4], [4], [3, 2, 1, 0]])
print(arr4[[0, 1, 2, 3], [5, 3, 2, 4], 4, [3, 2, 1, 0]])
"""
广播规则：
    NumPy 在进行花式索引时，会将这些索引广播成相同长度。
    因为只有第 3 维是单个值 [4]，其它都是 4 个值，所以它会被广播为：
        1. [4]  --》 [4, 4, 4, 4]
        2. 4 是一个标量，它在索引中会被自动广播成长度为 4 的数组 [4, 4, 4, 4]
"""
# [119 198 297 456]
# [119 198 297 456]

# print(arr4[:, [[0, 1, 2, 3], [0, 1, 2, 3]], :, [0, 1, 2, 3]])
# shape = (2 4 4 5) ???

print(arr4[:, [[5, 3, 2, 4], [5, 3, 2, 4]], :, :].shape)
# 只对 dim1 改为 (2, 4)
# (4, 2, 4, 5, 4)


print(arr4[:, [[5, 3, 2, 4], [5, 3, 2, 4]], [1, 2, 3, 0], :].shape)
# dim1 (2, 4) 与 dim2 (广播为 (2, 4)) 连着，没有移到最前面来
# (4, 2, 4, 4)

print(arr4[:, [[5, 3, 2, 4], [5, 3, 2, 4]], :, [1, 2, 3, 0]].shape)
# (2, 4, 4, 5)