"""
with 是 Python 中的一种控制流语句，用于简化资源管理，
特别是在处理需要显式打开和关闭的资源时，
如文件、网络连接、锁（locks）等。

with 语句通过上下文管理器（context manager）来自动管理资源的获取和释放，
确保资源在使用后被正确地释放，即使在发生异常的情况下也能保证这一点。

---------------------------------

上下文管理器（Context Manager）
是一个对象，它定义了进入和退出上下文时需要执行的操作。具体来说，它实现了两个方法：

__enter__()：在进入 with 代码块时调用，通常用于初始化资源或获取资源。
__exit__()：在退出 with 代码块时调用，无论代码块内是否发生异常，都会调用此方法，通常用于释放资源或执行清理操作。
"""

# 使用 with 语句打开文件

print("\n-------------------------------------")
with open('0test.md', 'r') as file:
    data = file.read()
    print(data)

# 文件在这里已经自动关闭，无需显式调用 file.close()
# 无论代码块内是否发生异常，file.close() 都会被自动调用，确保文件被正确关闭。
